module(name = "hulk")

# Go
bazel_dep(name = "rules_go", version = "0.53.0")
bazel_dep(name = "gazelle", version = "0.42.0")
bazel_dep(name = "rules_proto", version = "7.1.0")
bazel_dep(name = "rules_proto_grpc_go", version = "5.0.1")
bazel_dep(name = "protobuf", version = "29.3")

go_sdk_ext = use_extension("@rules_go//go:extensions.bzl", "go_sdk")
go_sdk_ext.download(
    name = "go_sdk",
    version = "1.24.1",
)
use_repo(go_sdk_ext, "go_sdk")

bazel_dep(name = "rules_oci", version = "2.2.6")
bazel_dep(name = "tar.bzl", version = "0.3.0")

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
    name = "distroless_base",
    digest = "sha256:611d30d7f6d9992c37b1e1a212eefdf1f7c671deb56db3707e24eb01da8c4c2a",
    image = "gcr.io/distroless/base",
    platforms = [
        "linux/amd64",
        "linux/arm64/v8",
    ],
)
oci.pull(
    name = "distroless_java",
    digest = "sha256:7c05bf8a64ff1a70a16083e9bdd35b463aa0d014c2fc782d31d13ea7a61de633",
    image = "gcr.io/distroless/java21-debian12",
    platforms = [
        "linux/amd64",
        "linux/arm64/v8",
    ],
    tag = "latest",
)
use_repo(oci, "distroless_java", "distroless_java_linux_amd64", "distroless_java_linux_arm64_v8")
use_repo(oci, "distroless_base", "distroless_base_linux_amd64", "distroless_base_linux_arm64_v8")

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(go_deps, "com_github_confluentinc_confluent_kafka_go", "com_github_google_uuid", "com_github_gorilla_websocket", "com_github_ibm_sarama", "com_github_prometheus_client_golang", "com_github_rabbitmq_amqp091_go", "go_tm_com_lib_model_ws_model", "go_tm_com_model_grpc_message", "org_golang_google_grpc")

#Python
bazel_dep(name = "rules_python", version = "1.5.4")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    python_version = "3.11",  # sẽ tự tải toolchain tương ứng
)
use_repo(python, "python_versions")

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "pip",
    python_version = "3.11",
    requirements_lock = "//com/tm/python/langchain:requirements_lock.txt",
)
use_repo(pip, "pip")

#Java/kotlin
bazel_dep(name = "rules_kotlin", version = "2.1.0")
bazel_dep(name = "rules_jvm_external", version = "6.3")
bazel_dep(name = "rules_java", version = "8.11.0")
bazel_dep(name = "rules_proto_grpc_java", version = "5.3.0")

maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
    artifacts = [
        "io.vertx:vertx-core:4.5.13",
        "io.vertx:vertx-web:4.5.13",
        "io.vertx:vertx-web-client:4.5.13",
        "io.vertx:vertx-redis-client:4.5.13",
        "io.vertx:vertx-web-openapi:4.5.13",
        "org.apache.kafka:kafka-clients:4.0.0",
        "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.10.1",
        "io.micrometer:micrometer-registry-prometheus:1.14.5",
        "com.google.dagger:dagger:2.56",
        "com.google.dagger:dagger-compiler:2.56",
        "com.google.dagger:dagger-producers:2.56",
        "javax.inject:javax.inject:1",
        "com.google.auto.value:auto-value-annotations:1.11.0",
        "com.google.code.gson:gson:2.12.1",
        "javax.annotation:javax.annotation-api:1.3.2",
        "com.google.auto:auto-common:1.2.2",
        "com.datastax.oss:java-driver-core:4.17.0",
        "org.apache.hbase:hbase-client:2.6.2",
        "org.apache.hbase:hbase-common:2.6.2",
        "org.apache.hadoop:hadoop-common:3.4.1",
        "org.roaringbitmap:RoaringBitmap:1.3.0",
        "com.google.cloud:google-cloud-bigquery:2.49.0",
        "com.google.auth:google-auth-library-oauth2-http:1.33.1",
        "com.google.cloud:google-cloud-core:2.54.0",
        "com.google.cloud:google-cloud-storage:2.50.0",
        "com.google.api:gax-grpc:2.35.0",
        "com.opencsv:opencsv:5.10",
        "io.grpc:grpc-protobuf:1.73.0",
        "io.vertx:vertx-lang-kotlin-coroutines:4.5.13",
        "io.swagger.parser.v3:swagger-parser:2.1.32",
        "org.webjars:swagger-ui:5.27.1",
        "io.swagger.core.v3:swagger-annotations:2.2.36",
        "io.swagger.core.v3:swagger-integration:2.2.36",
        "io.swagger.core.v3:swagger-core:2.2.36",
        "io.swagger.core.v3:swagger-models:2.2.36",
        "com.rabbitmq:amqp-client:5.26.0",
        "org.slf4j:slf4j-api:2.0.17",
        "org.slf4j:slf4j-simple:2.0.17",
        "io.github.resilience4j:resilience4j-circuitbreaker:1.7.1",
        "io.github.resilience4j:resilience4j-kotlin:1.7.1",
    ],
    repositories = [
        "https://repo1.maven.org/maven2",
    ],
)
use_repo(maven, "maven")
